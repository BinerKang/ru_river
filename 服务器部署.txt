JDK安装
=============================
wget http://download.oracle.com/otn-pub/java/jdk/8u161-b12/2f38c3b165be4555a1fa6e98c45e0808/jdk-8u161-linux-x64.tar.gz
复制到容器中
docker cp ./jdk-8u161-linux-x64.tar.gz fervent_goldwasser:/opt
进入容器
 docker exec -t -i fervent_goldwasser /bin/bash

Docker安装
=============================
yum -y install docker

新版的 Docker 使用 /etc/docker/daemon.json（Linux） 或者 %programdata%\docker\config\daemon.json（Windows） 来配置 Daemon。

请在该配置文件中加入（没有该文件的话，请先建一个）：

{
  "registry-mirrors": ["http://hub-mirror.c.163.com"]
}

service docker start

docker run hello-world
==============================

  Jenkins安装
==============================
docker版
docker pull jenkinsci/blueocean

docker run --rm -d -p 8090:8080 -p 50000:50000 -v jenkins-data:/var/jenkins_home -v /var/run/docker.sock:/var/run/docker.sock jenkinsci/blueocean

http://114.115.183.133:8090   
docker ps  ==> 获取container id  docker logs {container id}  ==> 获取password 输入密码

username: admin001  password:1314@1314

# docker exec -t -i dev_tomcat /bin/bash
// docker exec意思是：在dev_tomcat下面运行一个命令，在这里，运行的是/bin/bash
// -t 表示分配一个pseudo-TTY，-i 表示可交互
***********************
https://blog.csdn.net/zh520qx/article/details/55669142 配置wen'    
Build 命令
install package -Ptest -DskipTests=true -e -X
***********************

普通版
https://wiki.jenkins.io/display/JENKINS/Installing+Jenkins+on+Red+Hat+distributions#InstallingJenkinsonRedHatdistributions-ImportantNoteonCentOSJava

wget -O /etc/yum.repos.d/jenkins.repo http://pkg.jenkins-ci.org/redhat/jenkins.repo 
rpm --import https://jenkins-ci.org/redhat/jenkins-ci.org.key
yum install jenkins

至此jenkins其实就已经安装完毕了，非常简单。但是有可能我们jenkins的端口被其他服务所占用，所以我门最好修改一下jenkins的端口。 
修改jenkins的配置文件在/etc/sysconfig/目录下的jenkins文件。 

执行命令：

vi /etc/sysconfig/jenkins

然后找到JENKINS_PORT=“8080” 和JENKINS_AJP_PORT=”8009“ 这两处，将两处的端口值分别改成8888和8889（也可以改成其他空闲的端口号）。

vi /etc/init.d/jenkins
candidates中第一行添加java路径
/usr/local/jdk/jdk1.8.0_171/bin/java

service jenkins start
// 查找密码
vi /var/lib/jenkins/secrets/initialAdminPassword

username: admin001  password:1314@1314

1.将jenkins账号分别加入到root组中

gpasswd -a root jenkins

2.修改vi /etc/sysconfig/jenkins文件中，

# user id to be invoked as (otherwise will run as root; not wise!)
JENKINS_USER=root
JENKINS_GROUP=root

可以修改为root权限运行

3.重启Jenkins
service Jenkins restart

Jenkis脚本模板*******************
#!/bin/bash 
whoami
export BUILD_ID=dontkillme #必须加  
/usr/local/tomcat-8.0.51/bin/shutdown.sh
TOMCATTHREAD=`ps aux | grep 'tomcat' | grep -v grep`  
if test -z "$TOMCATTHREAD"  
then  
   echo "TOMCAT NOT START"  
else  
    THREADLIST=(${TOMCATTHREAD// / })  
    PID=${THREADLIST[1]}  
    kill -9 $PID  
    sleep 3s  
fi  
   cd /usr/local/tomcat-8.0.51/webapps  
   rm -f ru_river.war  
   rm -rf ru_river  
   cp /var/lib/jenkins/workspace/ru_river/target/ru_river.war /usr/local/tomcat-8.0.51/webapps/
   /usr/local/tomcat-8.0.51/bin/catalina.sh start
   sleep 5s  
*****************************


***********************
https://blog.csdn.net/zh520qx/article/details/55669142 配置maven部署   
Build 命令
测试环境：install package -Ptest -DskipTests=true -e -X
生产环境：install package -Ppro -DskipTests=true -e -X
***********************

===============================

Mysql安装
==============================
wget -i -c http://dev.mysql.com/get/mysql57-community-release-el7-10.noarch.rpm

yum -y install mysql57-community-release-el7-10.noarch.rpm

yum -y install mysql-community-server
# 启动
systemctl start mysqld.service
# 查看状态
systemctl status mysqld.service

# 查看root密码
grep "password" /var/log/mysqld.log

# 进入mssql
mysql -uroot -p

# 更换密码
ALTER USER 'root'@'localhost' IDENTIFIED BY 'Ru@river1314#$';
修改为外网访问
use mysql;
update user set host='%' where user='root'; 
flush privileges;

# 移除仓库
yum -y remove mysql57-community-release-el7-10.noarch

==============================

redis 安装
==============================
 yum install gcc 
wget http://download.redis.io/releases/redis-3.2.9.tar.gz 
  tar xzf redis-3.2.9.tar.gz 
cd redis-3.2.9
# 清除之前的安装
make distclean
# 安装
 make
requirepass Admin@redis 设置密码
bind 192.168.8.159    //指定IP访问
bind 0.0.0.0    //任意IP都能访问
daemonize设置为yes // 后台启动
cd /usr/local/redis-3.2.9/;
src/redis-server redis.conf    // 使用配置文件启动redis服务器
# 本地连接测试
 D:\redis\redis-cli.exe -h 114.115.183.133 -p 6379 -a "Admin@redis"
 
==================================

==================================
JDK 安装
不能直接从orcal上下载，需要下载到本地，再上传
# wget http://download.oracle.com/otn-pub/java/jdk/8u172-b11/a58eab1ec242421181065cdc37240b08/jdk-8u172-linux-x64.tar.gz
tar -xvf jdk-8u171-linux-x64.tar.gz -C /usr/local/jdk/
安装完毕之后在/etc/profile文件末尾添加
vi /etc/profile
export JAVA_HOME=/usr/local/jdk/jdk1.8.0_171
export JRE_HOME=${JAVA_HOME}/jre
export CLASSPATH=.:${JAVA_HOME}/lib:${JRE_HOME}/lib
export PATH=${JAVA_HOME}/bin:$PATH

使/etc/profile生效
source /etc/profile
 java -version
==================================

Tomcat 安装
==================================
wget http://mirrors.tuna.tsinghua.edu.cn/apache/tomcat/tomcat-8/v8.0.51/bin/apache-tomcat-8.0.51.tar.gz
tar zxvf apache-tomcat-8.0.51.tar.gz

将tomcat中的/bin/catalina.sh 脚本 拷贝到init.d下，这样是为了比较方面的启动tomcat，在任务地方通过service tomcat start 就可以启动tomcat

cp -p /usr/local/tomcat-8.0.51/bin/catalina.sh /etc/init.d/tomcat

vi /etc/init.d/tomcat  vi usr/local/tomcat-8.0.51/bin/catalina.sh分别加上
在第二行加入以下内容:
# chkconfig: 112 63 37
# description: tomcat server init script
# Source Function Library
. /etc/init.d/functions

JAVA_HOME=/usr/local/jdk/jdk1.8.0_171
CATALINA_HOME=/usr/local/tomcat-8.0.51

保存文件后执行以下操作

chmod 777 /etc/init.d/tomcat
chkconfig --add tomcat
chkconfig tomcat on

设置tomcat指向80端口，vi /usr/local/tomcat-8.0.51/conf/server.xml
http://114.115.183.133/

=========================
安装maven
=========================
wget http://mirrors.hust.edu.cn/apache/maven/maven-3/3.5.3/binaries/apache-maven-3.5.3-bin.tar.gz
tar -zxvf apache-maven-3.5.3-bin.tar.gz -C /usr/local/
配置maven的环境变量
vi /etc/profile
在后面添加
export MAVEN_HOME=/usr/local/apache-maven-3.5.3
export PATH=$PATH:$MAVEN_HOME/bin

重启环境
source /etc/profile

mvn -version

设置仓库源
vi /usr/local/apache-maven-3.5.3/conf/setting.xml 的mirros里添加 
阿里镜像
<mirror>  
    <id>nexus-aliyun</id>  
    <mirrorOf>central</mirrorOf>    
    <name>Nexus aliyun</name>  
    <url>http://maven.aliyun.com/nexus/content/groups/public</url>  
</mirror>  
中国maven镜像
<mirror>  
  <id>nexus-osc</id>  
  <mirrorOf>*</mirrorOf>  
  <name>Nexus osc</name>  
  <url>http://maven.oschina.net/content/groups/public/</url>  
</mirror>  
=======================

=========================
安装Git
=========================
# 安装依赖
yum install curl-devel expat-devel gettext-devel openssl-devel zlib-devel perl-devel
安装 git
yum install -y git

设置tomcat直接访问项目
===============
vi $tomcat/conf/server.xml
<Host name="localhost"  appBase="webapps"
            unpackWARs="true" autoDeploy="true"
            xmlValidation="false" xmlNamespaceAware="false">

    增加这一行（docBase:为项目的名称）：<Context path="" docBase="Demo" reloadable="true" />

 </Host>